---
import ExampleContainer from './ExampleContainer.svelte';
import type {KNOWN_FRAMEWORKS} from '../config';
import {getHighlighted} from '../utils/code';
import {getCode} from '../utils/code';
import {parseLanguage} from '../utils/location';
import {EXAMPLE} from '../translations';

interface Props {
	sources: Record<string, () => Promise<string>>;
	framework: keyof typeof KNOWN_FRAMEWORKS;
}

const {sources, framework} = Astro.props as Props;
const code = await getCode(sources, framework);
const [codeLanguage, codeHTML] = getHighlighted(code, framework);

const language = parseLanguage(Astro.url.pathname);
const translations = EXAMPLE[language];
---

<ExampleContainer
	client:idle
	codeLanguage={codeLanguage}
	codeHTML={codeHTML}
	showCodeLabel={translations.show_code}
>
	{
		framework === 'react' ? (
			<slot name="react" />
		) : framework === 'solid' ? (
			<slot name="solid" />
		) : framework === 'svelte' ? (
			<slot name="svelte" />
		) : framework === 'vue' ? (
			<slot name="vue" />
		) : (
			<>{translations.example_not_available}</>
		)
	}
</ExampleContainer>
