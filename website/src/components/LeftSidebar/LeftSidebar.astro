---
import {getLanguageFromURL} from '../../languages';
import {SIDEBAR} from '../../config';
import cx from 'classnames';

type Props = {
	currentPage: string;
};

const {currentPage} = Astro.props as Props;
const currentPageMatch = currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];
---

<nav
	aria-labelledby="grid-left"
	id="sidebar"
	class="px-4 py-8 wh-full max-h-screen bg-shade overflow-y-auto"
>
	<ul>
		{
			Object.entries(sidebar).map(([header, children]) => (
				<li>
					<details class="group" open>
						<summary class="flex items-center justify-between p-2 pl-4 font-bold rounded-full hover:text-accent hover:bg-shade-100 ring-inset">
							<span>{header}</span>
							<span class="group-open:rotate-90">
								<svg
									xmlns="http://www.w3.org/2000/svg"
									class="icon icon-tabler icon-tabler-chevron-right"
									width="24"
									height="24"
									viewBox="0 0 24 24"
									stroke-width="2"
									stroke="currentColor"
									fill="none"
									stroke-linecap="round"
									stroke-linejoin="round"
								>
									<path stroke="none" d="M0 0h24v24H0z" fill="none" />
									<polyline points="9 6 15 12 9 18" />
								</svg>
							</span>
						</summary>
						<ul>
							{children.map((child) => {
								const url = Astro.site?.pathname + child.link;
								return (
									<li>
										<a
											href={url}
											aria-current={
												currentPageMatch === child.link ? 'page' : false
											}
											class={cx(
												'flex px-4 py-2 pl-6 font-medium rounded-full hover:text-accent hover:bg-shade-100 ring-inset',
												{
													'text-accent bg-shade-100':
														currentPageMatch === child.link,
												},
											)}
										>
											{child.text}
										</a>
									</li>
								);
							})}
						</ul>
					</details>
				</li>
			))
		}
	</ul>
</nav>
