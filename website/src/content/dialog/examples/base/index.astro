---
import ExampleContainer from '../../../../components/ExampleContainer.svelte';
import type {KNOWN_FRAMEWORKS} from '../../../../config';
import ReactApp from './react';
import SolidApp from './solid';
import SvelteApp from './svelte.svelte';
import VueApp from './vue.vue';

type Props = {
	framework: keyof typeof KNOWN_FRAMEWORKS;
};

const {framework} = Astro.props as Props;
const sources = import.meta.glob('./*', {as: 'raw'});

function getFilename(framework: keyof typeof KNOWN_FRAMEWORKS) {
	switch (framework) {
		case 'react':
			return './react.tsx';
		case 'solid':
			return './solid.tsx';
		case 'svelte':
			return './svelte.svelte';
		case 'vue':
			return './vue.vue';
	}
}

const filename = getFilename(framework);
const source = await sources[filename]?.();
if (source === undefined) {
	console.warn(`Missing source for ${framework}`);
}
---

<ExampleContainer client:idle code={source ?? ''}>
	{
		framework === 'react' ? (
			<ReactApp client:idle />
		) : framework === 'solid' ? (
			<SolidApp client:only="solid-js" />
		) : framework === 'svelte' ? (
			<SvelteApp client:idle />
		) : framework === 'vue' ? (
			<VueApp client:idle />
		) : (
			<>Example not available</>
		)
	}
</ExampleContainer>
