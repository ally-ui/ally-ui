---
import {KNOWN_LANGUAGE_CODES} from '../../../../config';

export async function getStaticPaths() {
	function parseWidget(filepath: string): string | undefined {
		const tokens = filepath.match(/([\w-]+)\/\d+\.\d+\.\d+\/[\w-]+\.mdx$/);
		if (tokens === null) return undefined;
		if (tokens.length !== 2) return undefined;
		return tokens[1]!;
	}

	const content = await Astro.glob('../../../../content/widgets/**/*.mdx');
	const widgets = new Set<string>();
	for (const page of content) {
		const widget = parseWidget(page.file);
		if (widget === undefined) continue;
		widgets.add(widget);
	}

	return KNOWN_LANGUAGE_CODES.flatMap((language) =>
		Array.from(widgets.values()).map((widget) => ({
			params: {language, widget},
		})),
	);
}
---

<script is:inline>
	let framework = window.localStorage.getItem('framework');
	if (framework === null) {
		framework = 'react';
		window.localStorage.setItem('framework', framework);
	}
	const pathTokens = window.location.pathname
		.split('/')
		.filter((token) => token !== '');
	const language = pathTokens[0];
	const widget = pathTokens.at(-1);
	window.location.pathname = `/${language}/widgets/${widget}/${framework}`;
</script>
